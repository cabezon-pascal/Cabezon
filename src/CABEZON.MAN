Caveson Ver0.08 User's Manual

1. ready

(1) Hardware / OS
   The compiler itself is written in Caveson itself.
   The libraries are Caveson itself and TASM.
   Basically, if it is on MS-DOS, it should not depend on the model, but confirmation is PC-9801
UV11 and he only does on PC-9801NS / E.
   8087 (287,387,487SX or 486DX) for running programs that include floating point arithmetic
Above) is required. Even if it contains floating point arithmetic, if you just compile it,
8087 is not needed. The compiler itself is written using only the functions of integer arithmetic
Because it is.

(2) File preparation
   An assembler and linker are required to run Caveson. I confirmed the operation
The sembra / linker includes the following

    assembler
        MASM   Ver5.1           (It works even before 3.0)
        TASM   Ver1.0 or higher
        R86    Ver1.11          (attached to LSI C-86)
        A86    Ver3.14

    linker
        LINK   Ver3.0 or higher (can be attached to MS-DOS)
        TLINK  Ver1.0 or higher
        BLINK  Ver2.15          (attached to Zortech C++)
        LLD    Ver1.10          (attached to LSI C-86)
        RTLINK Ver2.03

   In other words, if you have LSI C-86 Ver3.3 (a tasting version is also acceptable), run Caveson.
You will be able to do it. However, some functions are useful in assembler A86 and R86.
Cannot be used. If possible, use MASM or TASM.
   The execution format of the distributed Caveson is created using the combination of TASM / TLINK.
It is made up.
The following programs including the assembler / linker can be placed in the current directory or
Place it in the directory specified by PATH.

    CAB.EXE     (Compiler driver)              Included in the archive
    CAB1.EXE    (Compiler body)                          "
    CABEZON.INI (Declaration of embedded name)           "
    CABEZON.ERR (Error message)                          "
    MASM.EXE    (assembler)                    Please prepare on the user side
    LINK.EXE    (linker)                                      "

[Note] CAB1.EXE, CABEZON.INI, and CABEZON.ERR should be placed in the same directory.
       Sai.

  Similarly, put the library files in the current directory.

    CLIB.LIB    (Library)        Included in the archive

   MS-LINK as a linker, RT-LINK, Zortech C++ attached linker (B-LINK)
If you use, put CLIB.LIB in the directory indicated by the environment variable LIB.
can also do.
   You can also use TASM and TLINK instead of MASM and LINK.
I can do it. In this case, set the environment variable with the following command.

A>SET ASM=TASM
A>SET LINK=TLINK

  You can specify A86, R86, and other linkers in a similar way.


2. Compile, link
   Follow the procedure below to compile. Assembler and linker start automatically
Will be done. If you omit the extension, .PAS is assumed.

A>CAB Source file name

   If you have multiple files at the same time, compile and assemble all the files
After bulling, link to one program at once. The program name is the first
It will be the same as the file name.
   If you do not specify any compile options, compile asses.
Numble links are made one after another. (See below)

                               CAB
                 +-------------+|+-------------+
                 |              |              |
                CAB1           MASM           LINK
        A.PAS  ---->  A.ASM   ---->  A.OBJ   ---->   A.EXE

   If you want to execute from the middle of the above compile / link / assemble flow, for example
For example, when assembling MASM or later, specify the file extension.
For example:

A>CAB A.ASM B.OBJ

   In this case, after assembling A.ASM, combine it with B.OBJ into one program.
Link This feature allows you to compile only the modified modules
Therefore, it is especially effective when compiling separately.

   Contrary to the above, you can also specify to stop the series of compilation work in the middle.
I will. In this case, specify it in the compiler startup option. The following options
There is an option.

    /s  Compile only
    /c  Compile and assemble only
        (If you specify the file name .ASM, only assemble)

3. Other features

(1) Startup options
        /j  Instructs the assembler to optimize JMP instructions. (TASM3.0 or higher,
            Or only R86 is valid)
        /d  Shows a debug display of the compiler itself at compile time.
        /s  Compile to generate an .ASM file.
        /c  Compile and assemble to generate an .OBJ file.
        /l  Generate a list file when assembling.
        /m  Generate a map file when linking.

   Specify the startup options before or after specifying the source file. uppercase letter
And lowercase.

[Example]
    A>CAB BEM.PAS /C


Hiroshi Tokumaru / ockeghem
	htokumar@jun.email.ne.jp
	QGB01521@niftyserve.or.jp
	hiroshi_tokumaru@msn.com
